{"version":3,"sources":["index.js"],"names":["dealWithReactElement","CComponent","opts","cb","_React$Component","_class2","props","_classCallCheck","this","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","intent","state","show","unmounted","bind","componentMonuted","append","_inherits","_createClass","key","value","originalState","queryer","data","setState","sax","componentDidMount","self","that","findDOMNode","_ctx","ComposedComponent","hide","_get","prototype","itemDefaultMethod","isFunction","target","rendered","itemMethod","React","createElement","Component","combineX","dispatcher","QueryCtx","ctx","store","globalName","liveState","_lodash2","default","queryActions","curState","_tmp","oState","_lodash4","extension","isArray","_lodash6","SAX","returnReactClass","_typeof","type","isValidElement","Temp","_ComposedComponent2","_this3","gname","dispatch","refs","Query","config","timer","saxer","setActions","ReactComponentMonuted","roll","hasMounted","clearTimeout","setTimeout","browserRender","id","X","document","getElementById","nodeType","render","_rendered","dom","elements","combx","_lodash","require","_lodash3","_lodash5","isClient","window","context","C","global","reactDom","ReactDOM","ReactDom","renderToString","_ComposedComponent","_class","_this","temp","plugins","Array","keys","map","item","wrap","CombineClass","on","inject","_this4","arguments","length","undefined","CombX","x","func","_actions","fun","emit","obj","lowCaseName","toLowerCase","param","exts","_name","_this5","_props","rended","container"],"mappings":"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","file":"../index.js","sourcesContent":["/**\n * React-combinex\n * 增强react的用法，贴近jquery的使用方式\n */\nconst isClient = typeof window !== 'undefined'\nconst context = ( C => C ? window : global)(isClient) || {}\nimport cloneDeep from 'lodash.clonedeep'\nimport merge from 'lodash.merge'\nimport uniqueId from 'lodash.uniqueid'\nconst SAX = ( ()=> typeof SAX != 'undefined' ? SAX : require('fkp-sax'))()\nconst React = (typeof React != 'undefined' ? React : require('react'))\nconst reactDom = ( C => typeof ReactDOM != 'undefined' ? ReactDOM : typeof ReactDom != 'undefined' ? ReactDom : C ? require('react-dom') : require('react-dom/server'))(isClient)\nconst findDOMNode = ( C => C ? reactDom.findDOMNode : function(){} )(isClient)\nconst render      = ( C => C ? reactDom.render : reactDom.renderToString)(isClient)\n\nconst componentMonuted = SAX('ReactComponentMonuted')\nconst store = ( sax => {\n  try {\n    if (!sax) throw 'storehlc depend on SAX, SAX is fkp-sax, is a Global fun'\n    return (id, ComposedComponent, extension) => {\n      if (!id) throw 'storehlc id must be set'\n      return class extends ComposedComponent {\n        constructor(props) {\n          super(props)\n          this.globalName = id\n\n          // 初始化，组件没有渲染的状态\n          const unmounted = {}\n          unmounted[id] = false\n          componentMonuted.append(unmounted)\n\n          const queryer = sax(id)\n          queryer.data.originalState\n          ? queryer.data.originalState[id] = cloneDeep(this.state)\n          : ( ()=>{\n            let temp = {}; temp[id] = cloneDeep(this.state)\n            queryer.data.originalState = temp\n          })()\n          sax.bind(id, this)\n\n          if (typeof extension == 'object') {\n            if (typeof extension.plugins == 'object' && !Array.isArray(extension.plugins)) {\n              const plugins = extension.plugins\n              Object.keys(extension.plugins).map( item => {\n                if (typeof plugins[item] == 'function') {\n                  // plugins[item] = this::plugins[item]\n                  this[item] = plugins[item]\n                }\n              })\n            }\n          }\n        }\n      }\n    }\n  } catch (e) {\n    return ComposedComponent\n  }\n})(SAX)\n\nconst isFunction = function(target){\n  return typeof target == 'function'\n}\n\n\n/**\n * [dealWithReactElement 处理传入为react element 的场景，一般用于wrap]\n * @param  {react element} CComponent [description]\n * @return {react class}            [description]\n */\nfunction dealWithReactElement(CComponent, opts, cb){\n  return class extends React.Component {\n    constructor(props){\n      super(props)\n      this.intent = this.props.intent\n      this.state = { show: true }\n\n      this.show = this.show.bind(this)\n      this.hide = this.hide.bind(this)\n    }\n    componentWillMount() {\n      if (this.props.show == false) this.setState({ show: false })\n    }\n    show(){\n      this.setState({\n        show: true\n      })\n    }\n    hide(){\n      this.setState({\n        show: false\n      })\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount() {\n      let self = this\n      let that = findDOMNode(this);\n      const _ctx = {\n        show: this.show,\n        hide: this.hide\n      }\n\n      super.componentDidMount ? super.componentDidMount() : ''\n\n      if( typeof this.props.itemDefaultMethod == 'function' ){\n        self.props.itemDefaultMethod.call(_ctx, that, self.intent)\n      }\n\n      if (\n        typeof cb == 'function' ||\n        typeof this.props.rendered == 'function' ||\n        typeof this.props.itemMethod == 'function'\n      ) {\n        const imd = isFunction(cb) ? cb : this.props.rendered || this.props.itemMethod\n        imd.call(_ctx, that, self.intent)\n      }\n    }\n    render(){\n      return this.state.show ? CComponent : <span/>\n    }\n  }\n}\n\n/**\n * [combineX description]\n * @param  {react class | react element}   ComposedComponent [description]\n * @param  {object}   opts              [description]\n * @param  {Function} cb                [description]\n * @return {react class | object}       [description]\n */\n\nexport default function combineX(ComposedComponent, opts, cb){\n  if (!ComposedComponent) return\n\n  if ( typeof ComposedComponent == 'string' || Array.isArray(ComposedComponent) ) return\n\n  let extension = cb\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = undefined\n  }\n\n  const globalName = uniqueId('Combinex_')\n\n  let queryer = SAX(globalName)\n  if (opts) { queryer.append(opts) }\n\n  // will return React class for type 2\n  let returnReactClass = false\n  if (typeof opts == 'object' && opts.type == 'reactClass') {\n    returnReactClass = true\n    delete opts.type\n  }\n\n\n\n\n\n  /**\n   * type 1\n   * ComposedComponent 为 React element\n   * @param  {[type]} React [description]\n   * @return [type]         [description]\n   */\n  if (React.isValidElement(ComposedComponent)) {\n    return dealWithReactElement(ComposedComponent, opts, cb)\n  }\n\n\n\n\n\n\n  /**\n   * type 2\n   * ComposedComponent 为 React class\n   * @type {[type]}\n   */\n\n  function dispatcher(key, props, QueryCtx){\n    const ctx = queryer.store.ctx[globalName]\n\n    const liveState = cloneDeep(ctx.state)\n    const oState = queryer.data.originalState[globalName]\n    // const oState = JSON.parse(queryer.data.originalState[globalName])\n\n    const queryActions = queryer.data\n\n    // const _state = {\n    //   curState: liveState,\n    // }\n\n    queryActions.curState = liveState\n    QueryCtx.data = liveState.data\n\n    if (queryActions[key]) {\n      const _tmp = queryActions[key].call(queryActions, oState, props)\n      if (_tmp) {\n        const target = merge({}, oState, _tmp)\n        ctx.setState(target)\n      }\n    }\n  }\n\n  let ReactComponentMonuted = false\n  class Temp extends ComposedComponent {\n    constructor(props) {\n      super(props);\n\t\t\tthis.intent = this.props.intent || [];\n    }\n\n    componentWillUnmount(){\n      const gname = this.globalName\n      componentMonuted.data[gname] = false\n      // ReactComponentMonuted = false\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount(){\n\t\t\tlet self = this\n\t\t\tlet that = findDOMNode(this);\n\n      super.componentDidMount ? super.componentDidMount() : ''\n\n      const _ctx = {\n        // state: queryer.data.originalState[globalName],\n        dispatch: dispatcher,\n        refs: this.refs\n      }\n\n\t\t\tif( typeof this.props.itemDefaultMethod == 'function' ){\n        self.props.itemDefaultMethod.call(_ctx, that, self.intent)\n\t\t\t}\n\n      if (\n        typeof cb == 'function' ||\n        typeof this.props.rendered == 'function' ||\n        typeof this.props.itemMethod == 'function'\n      ) {\n        const imd = isFunction(cb) ? cb : this.props.rendered || this.props.itemMethod\n        imd.call(_ctx, that, self.intent)\n      }\n\n      const gname = this.globalName\n      componentMonuted.data[gname] = true\n\n      queryer.roll('rendered')\n\t\t}\n  }\n\n  class Query {\n    constructor(config){\n      this.config = config\n      this.element = store(globalName, Temp, extension)\n      this.timer\n      this.globalName = globalName\n      this.saxer = queryer\n      this.setActions = queryer.setActions\n      this.on = queryer.on\n      this.roll = queryer.roll\n      this.data\n\n      this.hasMounted = function(){\n        const gname = this.globalName\n        return componentMonuted.data[gname]\n      }\n\n      this.dispatch = function(key, props){\n        const that = this\n        clearTimeout(this.timer)\n        this.timer = setTimeout(function() {\n          const hasMounted = that.hasMounted()\n          if (hasMounted) dispatcher(key, props, that)\n        }, 0);\n      }\n    }\n  }\n\n  if (returnReactClass) {\n    return store(globalName, Temp, extension)\n  } else {\n    return new Query()\n  }\n}\n\ncombineX.wrap = function(ComposedComponent, opts, cb){\n  if (!opts) opts = {type: 'reactClass'}\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = {\n      type: 'reactClass'\n    }\n  }\n\n  if (typeof opts == 'object') {\n    opts.type = 'reactClass'\n  }\n\n  return combineX(ComposedComponent, opts, cb)\n}\n\n\n// CombineClass\n\nfunction browserRender(id, X, config){\n  const props = config.props\n  if (typeof id == 'string') {\n    return render(<X {...props}/>, document.getElementById(id))\n  }\n\n  else if (typeof id == 'object' && id.nodeType) {\n    return render(<X {...props}/>, id)\n  }\n}\n\nfunction _rendered(ctx, cb){\n  return function(dom, intent){\n    ctx.elements = this.refs\n    ctx.data = ctx.combx.data ? ctx.combx.data : ctx.config.props.data  // 用于实例中做数据查询，该data同步于react class的state.data，dispatcher中动态更新该值\n    cb.call(this, dom, intent, ctx)\n  }\n}\n\nexport class CombineClass{\n  constructor(config){\n    this.config = config\n    this.isClient = isClient\n    this.extension = {}\n    this.elements   // rendered方法中赋值，react class的componentDidMount之后将refs的内容赋值给该变量\n    browserRender = this::browserRender\n\n    this.inject()\n  }\n\n  combinex(GridsBase, Actions={}){\n    const that = this\n    const CombX = combineX(GridsBase, Actions, this.extension)\n    this.combx = CombX\n    this.globalName = CombX.globalName\n    this.x = CombX.element\n    this.dispatch = CombX::CombX.dispatch\n    this.hasMounted = CombX::CombX.hasMounted\n\n    this.setActions = function(key, func){\n      const _actions = {}\n      _actions[key] = func\n      CombX.saxer.setActions(_actions)\n      return this\n    }\n\n    this.on = (key, fun)=>{\n      CombX.saxer.on(key, fun)\n      return this\n    }\n\n    this.emit = (key, data) => CombX.saxer.roll(key, data)\n\n    this.roll = function(key, data){\n      CombX.saxer.roll(key, data)\n      return this\n    }\n    this.emit = this.roll\n\n    this.append = function(obj){\n      CombX.saxer.append(obj)\n      Object.keys(obj).map(function(item){\n        const lowCaseName = item.toLowerCase()\n        that[lowCaseName] = function(param){\n          that.dispatch(item, param)\n        }\n      })\n      return this\n    }\n  }\n\n  extend(exts){\n    if (typeof exts == 'object') {\n      Object.keys(exts).map( _name => {\n        this[_name] = exts[_name]\n      })\n    }\n  }\n\n  inject(src){\n    if (this.isClient) {\n      // const ij = inject()\n      // if (this.config.theme && this.config.autoinject) {\n      //   ij.css(['/css/m/'+this.config.theme])  //注入样式\n      // }\n      // if (typeof src == 'function') {\n      //   src(ij)\n      // }\n      // return ij\n    }\n    return this\n  }\n\n  setConfig(config){\n    this.config = config || {}\n    return this\n  }\n\n  setProps(props){\n    this.config.props = props\n    return this\n  }\n\n  reRender(){\n    this.render()\n  }\n\n  render(id, cb){\n    id = id || this.config.container\n    const X = this.x\n    let _props = this.props || this.config.props\n\n    if (typeof id == 'function' || typeof cb == 'function') {\n      this.config.rendered = typeof id == 'function' ? id : cb\n    }\n    if ( typeof this.config.rendered == 'function' || typeof this.rendered == 'function' ) {\n      const rended = (this.config.rendered || this.rendered )\n      if (_props) _props.rendered = _rendered(this, rended)\n      else {\n        _props = {\n          rendered: _rendered(this, rended)\n        }\n      }\n    }\n\n    this.config.props = _props || {}\n\n    if (typeof id == 'string' || typeof id == 'object') {\n      if (this.isClient) {\n        this.config.container = id\n        return browserRender(id, X, this.config)\n      }\n    }\n\n    _props = _props || {}\n    return <X {..._props}/>\n  }\n}\n"]}