{"version":3,"sources":["index.js"],"names":["dealWithReactElement","CComponent","opts","cb","_React$Component","_class2","props","_classCallCheck","this","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","intent","globalName","state","show","unmounted","bind","hide","_inherits","_createClass","key","value","id","queryer","setState","componentDidMount","self","that","findDOMNode","_ctx","ComposedComponent","_get","prototype","itemDefaultMethod","rendered","itemMethod","isFunction","React","createElement","Component","combineX","dispatcher","ctx","store","liveState","_lodash2","default","oState","data","originalState","queryActions","curState","QueryCtx","_tmp","Array","isArray","extension","undefined","_lodash6","SAX","append","returnReactClass","_typeof","type","isValidElement","Temp","_ComposedComponent2","_this3","gname","componentMonuted","dispatch","refs","roll","Query","config","element","saxer","setActions","on","ReactComponentMonuted","hasMounted","clearTimeout","timer","setTimeout","wrap","imd","render","document","getElementById","nodeType","X","dom","combx","_lodash","require","_lodash3","_lodash5","isClient","window","context","C","global","reactDom","ReactDOM","ReactDom","renderToString","sax","_ComposedComponent","_class","_this","temp","plugins","keys","map","item","e","target","CombineClass","browserRender","inject","GridsBase","_this4","Actions","arguments","length","x","CombX","keynames","toLowerCase","upKeyNames","ii","lowKeyNames","actName","param","fun","emit","appendActions","obj","lowCaseName","_rendered","exts","_name","_this5","_props","rended","container"],"mappings":"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","file":"../index.js","sourcesContent":["/**\n * React-combinex\n * 增强react的用法，贴近jquery的使用方式\n */\nconst isClient = typeof window !== 'undefined'\nconst context = ( C => C ? window : global)(isClient) || {}\nimport cloneDeep from 'lodash.clonedeep'\nimport merge from 'lodash.merge'\nimport uniqueId from 'lodash.uniqueid'\nconst SAX = ( ()=> typeof SAX != 'undefined' ? SAX : require('fkp-sax'))()\nconst React = (typeof React != 'undefined' ? React : require('react'))\nconst reactDom = ( C => typeof ReactDOM != 'undefined' ? ReactDOM : typeof ReactDom != 'undefined' ? ReactDom : C ? require('react-dom') : require('react-dom/server'))(isClient)\nconst findDOMNode = ( C => C ? reactDom.findDOMNode : function(){} )(isClient)\nconst render      = ( C => C ? reactDom.render : reactDom.renderToString)(isClient)\n\nif (!context.SAX) {\n  context.SAX = SAX\n}\n\nconst componentMonuted = SAX('ReactComponentMonuted')\nconst store = ( sax => {\n  try {\n    if (!sax) throw 'storehlc depend on SAX, SAX is fkp-sax, is a Global fun'\n    return (id, ComposedComponent, extension) => {\n      if (!id) throw 'storehlc id must be set'\n      return class extends ComposedComponent {\n        constructor(props) {\n          super(props)\n          this.globalName = id\n\n          // 初始化，组件没有渲染的状态\n          const unmounted = {}\n          unmounted[id] = false\n          componentMonuted.append(unmounted)\n\n          const queryer = sax(id)\n          queryer.data.originalState\n          ? queryer.data.originalState[id] = cloneDeep(this.state)\n          : ( ()=>{\n            let temp = {}; temp[id] = cloneDeep(this.state)\n            queryer.data.originalState = temp\n          })()\n          sax.bind(id, this)\n\n          if (typeof extension == 'object') {\n            if (typeof extension.plugins == 'object' && !Array.isArray(extension.plugins)) {\n              const plugins = extension.plugins\n              Object.keys(extension.plugins).map( item => {\n                if (typeof plugins[item] == 'function') {\n                  // plugins[item] = this::plugins[item]\n                  this[item] = plugins[item]\n                }\n              })\n            }\n          }\n        }\n      }\n    }\n  } catch (e) {\n    return ComposedComponent\n  }\n})(SAX)\n\nconst isFunction = function(target){\n  return typeof target == 'function'\n}\n\n\n/**\n * [dealWithReactElement 处理传入为react element 的场景，一般用于wrap]\n * @param  {react element} CComponent [description]\n * @return {react class}            [description]\n */\nfunction dealWithReactElement(CComponent, opts, cb){\n  return class extends React.Component {\n    constructor(props){\n      super(props)\n      this.intent = this.props.intent\n      this.state = { show: true }\n\n      this.show = this.show.bind(this)\n      this.hide = this.hide.bind(this)\n    }\n    componentWillMount() {\n      if (this.props.show == false) this.setState({ show: false })\n    }\n    show(){\n      this.setState({\n        show: true\n      })\n    }\n    hide(){\n      this.setState({\n        show: false\n      })\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount() {\n      let self = this\n      let that = findDOMNode(this);\n      const _ctx = {\n        show: this.show,\n        hide: this.hide\n      }\n\n      super.componentDidMount ? super.componentDidMount() : ''\n\n      if( typeof this.props.itemDefaultMethod == 'function' ){\n        self.props.itemDefaultMethod.call(_ctx, that, self.intent)\n      }\n\n      if (\n        typeof cb == 'function' ||\n        typeof this.props.rendered == 'function' ||\n        typeof this.props.itemMethod == 'function'\n      ) {\n        const imd = isFunction(cb) ? cb : this.props.rendered || this.props.itemMethod\n        imd.call(_ctx, that, self.intent)\n      }\n    }\n    render(){\n      return this.state.show ? CComponent : <span/>\n    }\n  }\n}\n\n/**\n * [combineX description]\n * @param  {react class | react element}   ComposedComponent [description]\n * @param  {object}   opts              [description]\n * @param  {Function} cb                [description]\n * @return {react class | object}       [description]\n */\n\nexport default function combineX(ComposedComponent, opts, cb){\n  if (!ComposedComponent) return\n\n  if ( typeof ComposedComponent == 'string' || Array.isArray(ComposedComponent) ) return\n\n  let extension = cb\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = undefined\n  }\n\n  const globalName = uniqueId('Combinex_')\n\n  let queryer = SAX(globalName)\n  if (opts) { queryer.append(opts) }\n\n  // will return React class for type 2\n  let returnReactClass = false\n  if (typeof opts == 'object' && opts.type == 'reactClass') {\n    returnReactClass = true\n    delete opts.type\n  }\n\n\n\n\n\n  /**\n   * type 1\n   * ComposedComponent 为 React element\n   * @param  {[type]} React [description]\n   * @return [type]         [description]\n   */\n  if (React.isValidElement(ComposedComponent)) {\n    return dealWithReactElement(ComposedComponent, opts, cb)\n  }\n\n\n\n\n\n\n  /**\n   * type 2\n   * ComposedComponent 为 React class\n   * @type {[type]}\n   */\n\n  function dispatcher(key, props, QueryCtx){\n    const ctx = queryer.store.ctx[globalName]\n\n    const liveState = cloneDeep(ctx.state)\n    const oState = queryer.data.originalState[globalName]\n    // const oState = JSON.parse(queryer.data.originalState[globalName])\n\n    const queryActions = queryer.data\n\n    // const _state = {\n    //   curState: liveState,\n    // }\n\n    queryActions.curState = liveState\n    QueryCtx.data = liveState.data\n\n    if (queryActions[key]) {\n      const _tmp = queryActions[key].call(queryActions, oState, props)\n      if (_tmp) {\n        // const target = merge({}, oState, _tmp)\n        ctx.setState(_tmp)\n      }\n    }\n  }\n\n  let ReactComponentMonuted = false\n  class Temp extends ComposedComponent {\n    constructor(props) {\n      super(props);\n\t\t\tthis.intent = this.props.intent || [];\n    }\n\n    componentWillUnmount(){\n      const gname = this.globalName\n      componentMonuted.data[gname] = false\n      // ReactComponentMonuted = false\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount(){\n\t\t\tlet self = this\n\t\t\tlet that = findDOMNode(this);\n\n      super.componentDidMount ? super.componentDidMount() : ''\n\n      const _ctx = {\n        // state: queryer.data.originalState[globalName],\n        dispatch: dispatcher,\n        refs: this.refs\n      }\n\n\t\t\tif( typeof this.props.itemDefaultMethod == 'function' ){\n        self.props.itemDefaultMethod.call(_ctx, that, self.intent)\n\t\t\t}\n\n      if (\n        typeof cb == 'function' ||\n        typeof this.props.rendered == 'function' ||\n        typeof this.props.itemMethod == 'function'\n      ) {\n        const imd = isFunction(cb) ? cb : this.props.rendered || this.props.itemMethod\n        imd.call(_ctx, that, self.intent)\n      }\n\n      const gname = this.globalName\n      componentMonuted.data[gname] = true\n\n      queryer.roll('rendered')\n\t\t}\n  }\n\n  class Query {\n    constructor(config){\n      this.config = config\n      this.element = store(globalName, Temp, extension)\n      this.timer\n      this.globalName = globalName\n      this.saxer = queryer\n      this.setActions = queryer.setActions\n      this.on = queryer.on\n      this.roll = queryer.roll\n      this.data\n\n      this.hasMounted = function(){\n        const gname = this.globalName\n        return componentMonuted.data[gname]\n      }\n\n      this.dispatch = function(key, props){\n        const that = this\n        clearTimeout(this.timer)\n        this.timer = setTimeout(function() {\n          const hasMounted = that.hasMounted()\n          if (hasMounted) dispatcher(key, props, that)\n        }, 0);\n      }\n    }\n  }\n\n  if (returnReactClass) {\n    return store(globalName, Temp, extension)\n  } else {\n    return new Query()\n  }\n}\n\nexport function wrap(ComposedComponent, opts, cb){\n  if (!opts) opts = {type: 'reactClass'}\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = {\n      type: 'reactClass'\n    }\n  }\n\n  if (typeof opts == 'object') {\n    opts.type = 'reactClass'\n  }\n\n  return combineX(ComposedComponent, opts, cb)\n}\n\n\n// CombineClass\n\nfunction browserRender(id, X, config){\n  const props = config.props\n  if (typeof id == 'string') {\n    return render(<X {...props}/>, document.getElementById(id))\n  }\n\n  else if (typeof id == 'object' && id.nodeType) {\n    return render(<X {...props}/>, id)\n  }\n}\n\nfunction _rendered(ctx, cb){\n  return function(dom, intent){\n    ctx.elements = this.refs\n    ctx.data = ctx.combx.data ? ctx.combx.data : ctx.config.props.data  // 用于实例中做数据查询，该data同步于react class的state.data，dispatcher中动态更新该值\n    cb.call(this, dom, intent, ctx)\n  }\n}\n\nexport class CombineClass{\n  constructor(config){\n    this.config = config\n    this.isClient = isClient\n    this.extension = {}\n    this.elements   // rendered方法中赋值，react class的componentDidMount之后将refs的内容赋值给该变量\n    browserRender = this::browserRender\n\n    this.inject()\n  }\n\n  combinex(GridsBase, Actions={}){\n    const that = this\n    const CombX = combineX(GridsBase, Actions, this.extension)\n    this.combx = CombX\n    this.globalName = CombX.globalName\n    this.x = CombX.element\n    this.dispatch = CombX::CombX.dispatch\n    this.hasMounted = CombX::CombX.hasMounted\n\n\n    let keynames = Object.keys(Actions)\n    const lowKeyNames = keynames.map( item => item.toLowerCase() )\n    const upKeyNames = keynames\n\n    for (let ii=0; ii<lowKeyNames.length; ii++) {\n      const actName = upKeyNames[ii]\n      this['$'+lowKeyNames[ii]] = function(param){\n        this.dispatch(actName, param)\n        return this\n      }\n    }\n\n    // this.setActions = function(key, func){\n    //   const _actions = {}\n    //   _actions[key] = func\n    //   CombX.saxer.setActions(_actions)\n    //   return this\n    // }\n\n    this.on = (key, fun)=>{\n      CombX.saxer.on(key, fun)\n      return this\n    }\n\n    this.roll = function(key, data){\n      CombX.saxer.roll(key, data)\n      return this\n    }\n\n    this.emit = this.roll\n\n\n    this.appendActions = function(obj){\n      CombX.saxer.append(obj)\n      Object.keys(obj).map(function(item){\n        const lowCaseName = '$'+item.toLowerCase()\n        that[lowCaseName] = function(param){\n          that.dispatch(item, param)\n        }\n      })\n      return this\n    }\n  }\n\n  extend(exts){\n    if (typeof exts == 'object') {\n      Object.keys(exts).map( _name => {\n        this[_name] = exts[_name]\n      })\n    }\n  }\n\n  inject(src){\n    if (this.isClient) {\n      // const ij = inject()\n      // if (this.config.theme && this.config.autoinject) {\n      //   ij.css(['/css/m/'+this.config.theme])  //注入样式\n      // }\n      // if (typeof src == 'function') {\n      //   src(ij)\n      // }\n      // return ij\n    }\n    return this\n  }\n\n  setConfig(config){\n    this.config = config || {}\n    return this\n  }\n\n  setProps(props){\n    this.config.props = props\n    return this\n  }\n\n  reRender(){\n    this.render()\n  }\n\n  render(id, cb){\n    id = id || this.config.container\n    const X = this.x\n    let _props = this.props || this.config.props\n\n    if (typeof id == 'function' || typeof cb == 'function') {\n      this.config.rendered = typeof id == 'function' ? id : cb\n    }\n    if ( typeof this.config.rendered == 'function' || typeof this.rendered == 'function' ) {\n      const rended = (this.config.rendered || this.rendered )\n      if (_props) _props.rendered = _rendered(this, rended)\n      else {\n        _props = {\n          rendered: _rendered(this, rended)\n        }\n      }\n    }\n\n    this.config.props = _props || {}\n\n    if (typeof id == 'string' || typeof id == 'object') {\n      if (this.isClient) {\n        this.config.container = id\n        return browserRender(id, X, this.config)\n      }\n    }\n\n    _props = _props || {}\n    return <X {..._props}/>\n  }\n}\n"]}