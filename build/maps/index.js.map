{"version":3,"sources":["index.js"],"names":["dealWithReactElement","CComponent","opts","cb","_React$Component","_class2","props","_classCallCheck","this","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","intent","state","show","unmounted","bind","componentMonuted","append","_inherits","_createClass","key","value","originalState","queryer","data","setState","sax","componentDidMount","self","that","findDOMNode","_ctx","ComposedComponent","hide","_get","prototype","itemDefaultMethod","isFunction","target","rendered","itemMethod","React","createElement","Component","combineX","dispatcher","QueryCtx","ctx","store","globalName","liveState","_lodash2","default","queryActions","curState","_tmp","oState","extension","isArray","_lodash6","SAX","returnReactClass","_typeof","type","isValidElement","Temp","_ComposedComponent2","_this3","gname","dispatch","refs","Query","config","timer","saxer","setActions","ReactComponentMonuted","roll","hasMounted","clearTimeout","setTimeout","browserRender","id","X","document","getElementById","nodeType","render","_rendered","dom","elements","combx","_lodash","require","_lodash3","_lodash5","isClient","window","context","C","global","reactDom","ReactDOM","ReactDom","renderToString","_ComposedComponent","_class","_this","temp","plugins","Array","keys","map","item","wrap","CombineClass","on","inject","_this4","Actions","arguments","length","undefined","CombX","x","lowKeyNames","toLowerCase","upKeyNames","keynames","ii","actName","param","fun","emit","appendActions","obj","lowCaseName","exts","_this5","_name","src","container","_props","rended"],"mappings":"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","file":"../index.js","sourcesContent":["/**\n * React-combinex\n * 增强react的用法，贴近jquery的使用方式\n */\nconst isClient = typeof window !== 'undefined'\nconst context = ( C => C ? window : global)(isClient) || {}\nimport cloneDeep from 'lodash.clonedeep'\nimport merge from 'lodash.merge'\nimport uniqueId from 'lodash.uniqueid'\nconst SAX = ( ()=> typeof SAX != 'undefined' ? SAX : require('fkp-sax'))()\nconst React = (typeof React != 'undefined' ? React : require('react'))\nconst reactDom = ( C => typeof ReactDOM != 'undefined' ? ReactDOM : typeof ReactDom != 'undefined' ? ReactDom : C ? require('react-dom') : require('react-dom/server'))(isClient)\nconst findDOMNode = ( C => C ? reactDom.findDOMNode : function(){} )(isClient)\nconst render      = ( C => C ? reactDom.render : reactDom.renderToString)(isClient)\n\nconst componentMonuted = SAX('ReactComponentMonuted')\nconst store = ( sax => {\n  try {\n    if (!sax) throw 'storehlc depend on SAX, SAX is fkp-sax, is a Global fun'\n    return (id, ComposedComponent, extension) => {\n      if (!id) throw 'storehlc id must be set'\n      return class extends ComposedComponent {\n        constructor(props) {\n          super(props)\n          this.globalName = id\n\n          // 初始化，组件没有渲染的状态\n          const unmounted = {}\n          unmounted[id] = false\n          componentMonuted.append(unmounted)\n\n          const queryer = sax(id)\n          queryer.data.originalState\n          ? queryer.data.originalState[id] = cloneDeep(this.state)\n          : ( ()=>{\n            let temp = {}; temp[id] = cloneDeep(this.state)\n            queryer.data.originalState = temp\n          })()\n          sax.bind(id, this)\n\n          if (typeof extension == 'object') {\n            if (typeof extension.plugins == 'object' && !Array.isArray(extension.plugins)) {\n              const plugins = extension.plugins\n              Object.keys(extension.plugins).map( item => {\n                if (typeof plugins[item] == 'function') {\n                  // plugins[item] = this::plugins[item]\n                  this[item] = plugins[item]\n                }\n              })\n            }\n          }\n        }\n      }\n    }\n  } catch (e) {\n    return ComposedComponent\n  }\n})(SAX)\n\nconst isFunction = function(target){\n  return typeof target == 'function'\n}\n\n\n/**\n * [dealWithReactElement 处理传入为react element 的场景，一般用于wrap]\n * @param  {react element} CComponent [description]\n * @return {react class}            [description]\n */\nfunction dealWithReactElement(CComponent, opts, cb){\n  return class extends React.Component {\n    constructor(props){\n      super(props)\n      this.intent = this.props.intent\n      this.state = { show: true }\n\n      this.show = this.show.bind(this)\n      this.hide = this.hide.bind(this)\n    }\n    componentWillMount() {\n      if (this.props.show == false) this.setState({ show: false })\n    }\n    show(){\n      this.setState({\n        show: true\n      })\n    }\n    hide(){\n      this.setState({\n        show: false\n      })\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount() {\n      let self = this\n      let that = findDOMNode(this);\n      const _ctx = {\n        show: this.show,\n        hide: this.hide\n      }\n\n      super.componentDidMount ? super.componentDidMount() : ''\n\n      if( typeof this.props.itemDefaultMethod == 'function' ){\n        self.props.itemDefaultMethod.call(_ctx, that, self.intent)\n      }\n\n      if (\n        typeof cb == 'function' ||\n        typeof this.props.rendered == 'function' ||\n        typeof this.props.itemMethod == 'function'\n      ) {\n        const imd = isFunction(cb) ? cb : this.props.rendered || this.props.itemMethod\n        imd.call(_ctx, that, self.intent)\n      }\n    }\n    render(){\n      return this.state.show ? CComponent : <span/>\n    }\n  }\n}\n\n/**\n * [combineX description]\n * @param  {react class | react element}   ComposedComponent [description]\n * @param  {object}   opts              [description]\n * @param  {Function} cb                [description]\n * @return {react class | object}       [description]\n */\n\nexport default function combineX(ComposedComponent, opts, cb){\n  if (!ComposedComponent) return\n\n  if ( typeof ComposedComponent == 'string' || Array.isArray(ComposedComponent) ) return\n\n  let extension = cb\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = undefined\n  }\n\n  const globalName = uniqueId('Combinex_')\n\n  let queryer = SAX(globalName)\n  if (opts) { queryer.append(opts) }\n\n  // will return React class for type 2\n  let returnReactClass = false\n  if (typeof opts == 'object' && opts.type == 'reactClass') {\n    returnReactClass = true\n    delete opts.type\n  }\n\n\n\n\n\n  /**\n   * type 1\n   * ComposedComponent 为 React element\n   * @param  {[type]} React [description]\n   * @return [type]         [description]\n   */\n  if (React.isValidElement(ComposedComponent)) {\n    return dealWithReactElement(ComposedComponent, opts, cb)\n  }\n\n\n\n\n\n\n  /**\n   * type 2\n   * ComposedComponent 为 React class\n   * @type {[type]}\n   */\n\n  function dispatcher(key, props, QueryCtx){\n    const ctx = queryer.store.ctx[globalName]\n\n    const liveState = cloneDeep(ctx.state)\n    const oState = queryer.data.originalState[globalName]\n    // const oState = JSON.parse(queryer.data.originalState[globalName])\n\n    const queryActions = queryer.data\n\n    // const _state = {\n    //   curState: liveState,\n    // }\n\n    queryActions.curState = liveState\n    QueryCtx.data = liveState.data\n\n    if (queryActions[key]) {\n      const _tmp = queryActions[key].call(queryActions, oState, props)\n      if (_tmp) {\n        // const target = merge({}, oState, _tmp)\n        ctx.setState(_tmp)\n      }\n    }\n  }\n\n  let ReactComponentMonuted = false\n  class Temp extends ComposedComponent {\n    constructor(props) {\n      super(props);\n\t\t\tthis.intent = this.props.intent || [];\n    }\n\n    componentWillUnmount(){\n      const gname = this.globalName\n      componentMonuted.data[gname] = false\n      // ReactComponentMonuted = false\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount(){\n\t\t\tlet self = this\n\t\t\tlet that = findDOMNode(this);\n\n      super.componentDidMount ? super.componentDidMount() : ''\n\n      const _ctx = {\n        // state: queryer.data.originalState[globalName],\n        dispatch: dispatcher,\n        refs: this.refs\n      }\n\n\t\t\tif( typeof this.props.itemDefaultMethod == 'function' ){\n        self.props.itemDefaultMethod.call(_ctx, that, self.intent)\n\t\t\t}\n\n      if (\n        typeof cb == 'function' ||\n        typeof this.props.rendered == 'function' ||\n        typeof this.props.itemMethod == 'function'\n      ) {\n        const imd = isFunction(cb) ? cb : this.props.rendered || this.props.itemMethod\n        imd.call(_ctx, that, self.intent)\n      }\n\n      const gname = this.globalName\n      componentMonuted.data[gname] = true\n\n      queryer.roll('rendered')\n\t\t}\n  }\n\n  class Query {\n    constructor(config){\n      this.config = config\n      this.element = store(globalName, Temp, extension)\n      this.timer\n      this.globalName = globalName\n      this.saxer = queryer\n      this.setActions = queryer.setActions\n      this.on = queryer.on\n      this.roll = queryer.roll\n      this.data\n\n      this.hasMounted = function(){\n        const gname = this.globalName\n        return componentMonuted.data[gname]\n      }\n\n      this.dispatch = function(key, props){\n        const that = this\n        clearTimeout(this.timer)\n        this.timer = setTimeout(function() {\n          const hasMounted = that.hasMounted()\n          if (hasMounted) dispatcher(key, props, that)\n        }, 0);\n      }\n    }\n  }\n\n  if (returnReactClass) {\n    return store(globalName, Temp, extension)\n  } else {\n    return new Query()\n  }\n}\n\ncombineX.wrap = function(ComposedComponent, opts, cb){\n  if (!opts) opts = {type: 'reactClass'}\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = {\n      type: 'reactClass'\n    }\n  }\n\n  if (typeof opts == 'object') {\n    opts.type = 'reactClass'\n  }\n\n  return combineX(ComposedComponent, opts, cb)\n}\n\n\n// CombineClass\n\nfunction browserRender(id, X, config){\n  const props = config.props\n  if (typeof id == 'string') {\n    return render(<X {...props}/>, document.getElementById(id))\n  }\n\n  else if (typeof id == 'object' && id.nodeType) {\n    return render(<X {...props}/>, id)\n  }\n}\n\nfunction _rendered(ctx, cb){\n  return function(dom, intent){\n    ctx.elements = this.refs\n    ctx.data = ctx.combx.data ? ctx.combx.data : ctx.config.props.data  // 用于实例中做数据查询，该data同步于react class的state.data，dispatcher中动态更新该值\n    cb.call(this, dom, intent, ctx)\n  }\n}\n\nexport class CombineClass{\n  constructor(config){\n    this.config = config\n    this.isClient = isClient\n    this.extension = {}\n    this.elements   // rendered方法中赋值，react class的componentDidMount之后将refs的内容赋值给该变量\n    browserRender = this::browserRender\n\n    this.inject()\n  }\n\n  combinex(GridsBase, Actions={}){\n    const that = this\n    const CombX = combineX(GridsBase, Actions, this.extension)\n    this.combx = CombX\n    this.globalName = CombX.globalName\n    this.x = CombX.element\n    this.dispatch = CombX::CombX.dispatch\n    this.hasMounted = CombX::CombX.hasMounted\n\n\n    let keynames = Object.keys(Actions)\n    const lowKeyNames = keynames.map( item => item.toLowerCase() )\n    const upKeyNames = keynames\n\n    for (let ii=0; ii<lowKeyNames.length; ii++) {\n      const actName = upKeyNames[ii]\n      this['$'+lowKeyNames[ii]] = function(param){\n        this.dispatch(actName, param)\n        return this\n      }\n    }\n\n    // this.setActions = function(key, func){\n    //   const _actions = {}\n    //   _actions[key] = func\n    //   CombX.saxer.setActions(_actions)\n    //   return this\n    // }\n\n    this.on = (key, fun)=>{\n      CombX.saxer.on(key, fun)\n      return this\n    }\n\n    this.roll = function(key, data){\n      CombX.saxer.roll(key, data)\n      return this\n    }\n\n    this.emit = this.roll\n\n\n    this.appendActions = function(obj){\n      CombX.saxer.append(obj)\n      Object.keys(obj).map(function(item){\n        const lowCaseName = '$'+item.toLowerCase()\n        that[lowCaseName] = function(param){\n          that.dispatch(item, param)\n        }\n      })\n      return this\n    }\n  }\n\n  extend(exts){\n    if (typeof exts == 'object') {\n      Object.keys(exts).map( _name => {\n        this[_name] = exts[_name]\n      })\n    }\n  }\n\n  inject(src){\n    if (this.isClient) {\n      // const ij = inject()\n      // if (this.config.theme && this.config.autoinject) {\n      //   ij.css(['/css/m/'+this.config.theme])  //注入样式\n      // }\n      // if (typeof src == 'function') {\n      //   src(ij)\n      // }\n      // return ij\n    }\n    return this\n  }\n\n  setConfig(config){\n    this.config = config || {}\n    return this\n  }\n\n  setProps(props){\n    this.config.props = props\n    return this\n  }\n\n  reRender(){\n    this.render()\n  }\n\n  render(id, cb){\n    id = id || this.config.container\n    const X = this.x\n    let _props = this.props || this.config.props\n\n    if (typeof id == 'function' || typeof cb == 'function') {\n      this.config.rendered = typeof id == 'function' ? id : cb\n    }\n    if ( typeof this.config.rendered == 'function' || typeof this.rendered == 'function' ) {\n      const rended = (this.config.rendered || this.rendered )\n      if (_props) _props.rendered = _rendered(this, rended)\n      else {\n        _props = {\n          rendered: _rendered(this, rended)\n        }\n      }\n    }\n\n    this.config.props = _props || {}\n\n    if (typeof id == 'string' || typeof id == 'object') {\n      if (this.isClient) {\n        this.config.container = id\n        return browserRender(id, X, this.config)\n      }\n    }\n\n    _props = _props || {}\n    return <X {..._props}/>\n  }\n}\n"]}