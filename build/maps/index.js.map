{"version":3,"sources":["index.js"],"names":["Object","extension","plugins","cb","queryer","_React$Component","_class2","props","_classCallCheck","this","_this2","_possibleConstructorReturn","__proto__","getPrototypeOf","call","intent","state","show","bind","hide","_inherits","_createClass","key","value","setState","e","ComposedComponent","isFunction","componentDidMount","_ctx","ctx","didMount","opts","CComponent","React","createElement","combineX","dispatcher","store","globalName","liveState","_lodash2","default","oState","data","originalState","queryActions","curState","QueryCtx","_tmp","Array","isArray","undefined","SAX","append","_typeof","type","returnReactClass","isValidElement","dealWithReactElement","Temp","_ComposedComponent2","_this3","gname","componentMonuted","findDOMNode","refs","_get","prototype","Query","config","saxer","on","roll","hasMounted","that","clearTimeout","timer","browserRender","render","X","document","getElementById","id","nodeType","_rendered","dom","elements","combx","_lodash","require","_lodash3","_lodash5","isClient","window","context","C","global","reactDom","ReactDOM","ReactDom","renderToString","sax","_ComposedComponent","_class","_this","unmounted","temp","keys","map","item","target","itemDefaultMethod","rendered","itemMethod","CombineClass","element","_this4","Actions","arguments","length","CombX","dispatch","keynames","lowKeyNames","toLowerCase","upKeyNames","ii","actName","param","fun","off","emit","appendActions","obj","lowCaseName","exts","_this5","_name","src","inject","container","x","_props","rended"],"mappings":"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","file":"../index.js","sourcesContent":["/**\n * React-combinex\n * 增强react的用法，贴近jquery的使用方式\n */\nconst isClient = typeof window !== 'undefined'\nconst context = ( C => C ? window : global)(isClient) || {}\nimport cloneDeep from 'lodash.clonedeep'\nimport merge from 'lodash.merge'\nimport uniqueId from 'lodash.uniqueid'\nconst SAX = ( ()=> typeof SAX != 'undefined' ? SAX : require('fkp-sax'))()\nconst React = (typeof React != 'undefined' ? React : require('react'))\nconst reactDom = ( C => typeof ReactDOM != 'undefined' ? ReactDOM : typeof ReactDom != 'undefined' ? ReactDom : C ? require('react-dom') : require('react-dom/server'))(isClient)\nconst findDOMNode = ( C => C ? reactDom.findDOMNode : function(){} )(isClient)\nconst render      = ( C => C ? reactDom.render : reactDom.renderToString)(isClient)\n\nif (!context.SAX) {\n  context.SAX = SAX\n}\n\nconst componentMonuted = SAX('ReactComponentMonuted')\nconst store = ( sax => {\n  try {\n    if (!sax) throw 'storehlc depend on SAX, SAX is fkp-sax, is a Global fun'\n    return (id, ComposedComponent, extension) => {\n      if (!id) throw 'storehlc id must be set'\n      return class extends ComposedComponent {\n        constructor(props) {\n          super(props)\n          this.globalName = id\n\n          // 初始化，组件没有渲染的状态\n          const unmounted = {}\n          unmounted[id] = false\n          componentMonuted.append(unmounted)\n\n          const queryer = sax(id)\n          queryer.data.originalState\n          ? queryer.data.originalState[id] = cloneDeep(this.state)\n          : ( ()=>{\n            let temp = {}; temp[id] = cloneDeep(this.state)\n            queryer.data.originalState = temp\n          })()\n          sax.bind(id, this)\n\n          if (typeof extension == 'object') {\n            if (typeof extension.plugins == 'object' && !Array.isArray(extension.plugins)) {\n              const plugins = extension.plugins\n              Object.keys(extension.plugins).map( item => {\n                if (typeof plugins[item] == 'function') {\n                  // plugins[item] = this::plugins[item]\n                  this[item] = plugins[item]\n                }\n              })\n            }\n          }\n        }\n      }\n    }\n  } catch (e) {\n    return ComposedComponent\n  }\n})(SAX)\n\nconst isFunction = function(target){\n  return typeof target == 'function'\n}\n\nconst didMount = function(ctx, opts, cb, queryer){\n  let that = findDOMNode(this)\n  if( typeof this.props.itemDefaultMethod == 'function' ){\n    this.props.itemDefaultMethod.call(ctx, that, this.intent)\n  }\n\n  if (\n    typeof cb == 'function' ||\n    typeof this.props.rendered == 'function' ||\n    typeof this.props.itemMethod == 'function'\n  ) {\n    const imd = isFunction(cb) ? cb : this.props.rendered || this.props.itemMethod\n    imd.call(ctx, that, this.intent)\n  }\n  queryer.roll('rendered', {\n    dom : that,\n    opts: opts,\n    ctx : ctx\n  })\n}\n\n\n/**\n * [dealWithReactElement 处理传入为react element 的场景，一般用于wrap]\n * @param  {react element} CComponent [description]\n * @return {react class}            [description]\n */\nfunction dealWithReactElement(CComponent, opts, cb, queryer){\n  return class extends React.Component {\n    constructor(props){\n      super(props)\n      this.intent = this.props.intent\n      this.state = { show: true }\n\n      this.show = this.show.bind(this)\n      this.hide = this.hide.bind(this)\n    }\n    componentWillMount() {\n      if (this.props.show == false) this.setState({ show: false })\n    }\n    show(){\n      this.setState({\n        show: true\n      })\n    }\n    hide(){\n      this.setState({\n        show: false\n      })\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount() {\n      let self = this\n      let that = findDOMNode(this);\n      const _ctx = {\n        show: this.show,\n        hide: this.hide\n      }\n\n      super.componentDidMount ? super.componentDidMount() : ''\n      didMount.call(this, _ctx, opts, cb, queryer)\n    }\n    render(){\n      return this.state.show ? CComponent : <span/>\n    }\n  }\n}\n\n/**\n * [combineX description]\n * @param  {react class | react element}   ComposedComponent [description]\n * @param  {object}   opts              [description]\n * @param  {Function} cb                [description]\n * @return {react class | object}       [description]\n */\n\nexport default function combineX(ComposedComponent, opts, cb){\n  if (!ComposedComponent) return\n\n  if ( typeof ComposedComponent == 'string' || Array.isArray(ComposedComponent) ) return\n\n  let extension = cb\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = undefined\n  }\n\n  const globalName = uniqueId('Combinex_')\n\n  let queryer = SAX(globalName)\n  if (opts) { queryer.append(opts) }\n\n  // will return React class for type 2\n  let returnReactClass = false\n  if (typeof opts == 'object' && opts.type == 'reactClass') {\n    returnReactClass = true\n    delete opts.type\n  }\n\n\n\n\n\n  /**\n   * type 1\n   * ComposedComponent 为 React element\n   * @param  {[type]} React [description]\n   * @return [type]         [description]\n   */\n  if (React.isValidElement(ComposedComponent)) {\n    return dealWithReactElement(ComposedComponent, opts, cb, queryer)\n  }\n\n\n\n\n\n\n  /**\n   * type 2\n   * ComposedComponent 为 React class\n   * @type {[type]}\n   */\n\n  function dispatcher(key, props, QueryCtx){\n    const ctx = queryer.store.ctx[globalName]\n\n    const liveState = cloneDeep(ctx.state)\n    const oState = queryer.data.originalState[globalName]\n    // const oState = JSON.parse(queryer.data.originalState[globalName])\n\n    const queryActions = queryer.data\n\n    // const _state = {\n    //   curState: liveState,\n    // }\n\n    queryActions.curState = liveState\n    QueryCtx.data = liveState.data\n\n    if (queryActions[key]) {\n      const _tmp = queryActions[key].call(queryActions, oState, props)\n      if (_tmp) {\n        // const target = merge({}, oState, _tmp)\n        ctx.setState(_tmp)\n      }\n    }\n  }\n\n  let ReactComponentMonuted = false\n  class Temp extends ComposedComponent {\n    constructor(props) {\n      super(props);\n\t\t\tthis.intent = this.props.intent || [];\n    }\n\n    componentWillUnmount(){\n      const gname = this.globalName\n      componentMonuted.data[gname] = false\n      // ReactComponentMonuted = false\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount(){\n\t\t\tlet self = this\n\t\t\tlet that = findDOMNode(this);\n\n      const _ctx = {\n        // state: queryer.data.originalState[globalName],\n        dispatch: dispatcher,\n        refs: this.refs\n      }\n      super.componentDidMount ? super.componentDidMount() : ''\n      didMount.call(this, _ctx, opts, cb, queryer)\n\n      componentMonuted.data[this.globalName] = true\n\t\t}\n  }\n\n  class Query {\n    constructor(config){\n      this.config = config\n      this.element = store(globalName, Temp, extension)\n      this.timer\n      this.globalName = globalName\n      this.saxer = queryer\n      this.setActions = queryer.setActions\n      this.on = queryer.on\n      this.roll = queryer.roll\n      this.data\n\n      this.hasMounted = function(){\n        const gname = this.globalName\n        return componentMonuted.data[gname]\n      }\n\n      this.dispatch = function(key, props){\n        const that = this\n        clearTimeout(this.timer)\n        this.timer = setTimeout(function() {\n          const hasMounted = that.hasMounted()\n          if (hasMounted) dispatcher(key, props, that)\n        }, 0);\n      }\n    }\n  }\n\n  if (returnReactClass) {\n    return store(globalName, Temp, extension)\n  } else {\n    return new Query()\n  }\n}\n\nexport function wrap(ComposedComponent, opts, cb){\n  if (!opts) opts = {type: 'reactClass'}\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = {\n      type: 'reactClass'\n    }\n  }\n\n  if (typeof opts == 'object') {\n    opts.type = 'reactClass'\n  }\n\n  return combineX(ComposedComponent, opts, cb)\n}\n\n\n// CombineClass\n\nfunction browserRender(id, X, config){\n  const props = config.props\n  if (typeof id == 'string') {\n    return render(<X {...props}/>, document.getElementById(id))\n  }\n\n  else if (typeof id == 'object' && id.nodeType) {\n    return render(<X {...props}/>, id)\n  }\n}\n\nfunction _rendered(ctx, cb){\n  return function(dom, intent){\n    ctx.elements = this.refs\n    ctx.data = ctx.combx.data ? ctx.combx.data : ctx.config.props.data  // 用于实例中做数据查询，该data同步于react class的state.data，dispatcher中动态更新该值\n    cb.call(this, dom, intent, ctx)\n  }\n}\n\nexport class CombineClass{\n  constructor(config){\n    this.config = config\n    this.isClient = isClient\n    this.extension = {}\n    this.elements   // rendered方法中赋值，react class的componentDidMount之后将refs的内容赋值给该变量\n    browserRender = this::browserRender\n\n    this.inject()\n  }\n\n  combinex(GridsBase, Actions={}){\n    const that = this\n    const CombX = combineX(GridsBase, Actions, this.extension)\n    this.combx = CombX\n    this.globalName = CombX.globalName\n    this.x = CombX.element\n    this.dispatch = CombX::CombX.dispatch\n    this.hasMounted = CombX::CombX.hasMounted\n\n\n    let keynames = Object.keys(Actions)\n    const lowKeyNames = keynames.map( item => item.toLowerCase() )\n    const upKeyNames = keynames\n\n    for (let ii=0; ii<lowKeyNames.length; ii++) {\n      const actName = upKeyNames[ii]\n      this['$'+lowKeyNames[ii]] = function(param){\n        this.dispatch(actName, param)\n        return this\n      }\n    }\n\n    // this.setActions = function(key, func){\n    //   const _actions = {}\n    //   _actions[key] = func\n    //   CombX.saxer.setActions(_actions)\n    //   return this\n    // }\n\n    this.on = (key, fun)=>{\n      CombX.saxer.on(key, fun)\n      return this\n    }\n\n    this.off = (key) => {\n      CombX.saxer.off(key)\n      return this\n    }\n\n    this.roll = function(key, data){\n      CombX.saxer.roll(key, data)\n      return this\n    }\n\n    this.emit = this.roll\n\n\n    this.appendActions = function(obj){\n      CombX.saxer.append(obj)\n      Object.keys(obj).map(function(item){\n        const lowCaseName = '$'+item.toLowerCase()\n        that[lowCaseName] = function(param){\n          that.dispatch(item, param)\n        }\n      })\n      return this\n    }\n  }\n\n  extend(exts){\n    if (typeof exts == 'object') {\n      Object.keys(exts).map( _name => {\n        this[_name] = exts[_name]\n      })\n    }\n  }\n\n  inject(src){\n    if (this.isClient) {\n      // const ij = inject()\n      // if (this.config.theme && this.config.autoinject) {\n      //   ij.css(['/css/m/'+this.config.theme])  //注入样式\n      // }\n      // if (typeof src == 'function') {\n      //   src(ij)\n      // }\n      // return ij\n    }\n    return this\n  }\n\n  setConfig(config){\n    this.config = config || {}\n    return this\n  }\n\n  setProps(props){\n    this.config.props = props\n    return this\n  }\n\n  reRender(){\n    this.render()\n  }\n\n  render(id, cb){\n    id = id || this.config.container\n    const X = this.x\n    let _props = this.props || this.config.props\n\n    if (typeof id == 'function' || typeof cb == 'function') {\n      this.config.rendered = typeof id == 'function' ? id : cb\n    }\n    if ( typeof this.config.rendered == 'function' || typeof this.rendered == 'function' ) {\n      const rended = (this.config.rendered || this.rendered )\n      if (_props) _props.rendered = _rendered(this, rended)\n      else {\n        _props = {\n          rendered: _rendered(this, rended)\n        }\n      }\n    }\n\n    this.config.props = _props || {}\n\n    if (typeof id == 'string' || typeof id == 'object') {\n      if (this.isClient) {\n        this.config.container = id\n        return browserRender(id, X, this.config)\n      }\n    }\n\n    _props = _props || {}\n    return <X {..._props}/>\n  }\n}\n"]}