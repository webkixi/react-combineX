{"version":3,"sources":["index.js"],"names":["dealWithReactElement","CComponent","opts","cb","queryer","_React$Component","_class2","props","_classCallCheck","this","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","extension","state","show","plugins","bind","hide","_inherits","_createClass","key","value","setState","ComposedComponent","componentDidMount","itemDefaultMethod","_ctx","_get","prototype","React","createElement","combineX","dispatcher","ctx","store","globalName","liveState","_lodash2","default","oState","data","originalState","queryActions","curState","QueryCtx","_tmp","Array","isArray","undefined","SAX","append","_typeof","type","returnReactClass","isValidElement","Temp","_ComposedComponent2","_this3","intent","gname","componentMonuted","findDOMNode","refs","didMount","Query","config","saxer","on","roll","hasMounted","that","clearTimeout","timer","browserRender","render","X","document","getElementById","id","nodeType","_rendered","dom","elements","combx","_lodash","require","_lodash3","_lodash5","isClient","window","context","C","global","reactDom","ReactDOM","ReactDom","renderToString","sax","_ComposedComponent","_class","_this","unmounted","temp","keys","map","item","e","target","rendered","itemMethod","isFunction","CombineClass","element","_this4","Actions","arguments","length","CombX","dispatch","keynames","lowKeyNames","toLowerCase","upKeyNames","ii","actName","param","fun","off","emit","appendActions","obj","lowCaseName","exts","_this5","_name","src","inject","container","x","_props","rended"],"mappings":"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","file":"../index.js","sourcesContent":["/**\n * React-combinex\n * 增强react的用法，贴近jquery的使用方式\n */\nconst isClient = typeof window !== 'undefined'\nconst context = ( C => C ? window : global)(isClient) || {}\nimport cloneDeep from 'lodash.clonedeep'\nimport merge from 'lodash.merge'\nimport uniqueId from 'lodash.uniqueid'\nconst SAX = ( ()=> typeof SAX != 'undefined' ? SAX : require('fkp-sax'))()\nconst React = (typeof React != 'undefined' ? React : require('react'))\nconst reactDom = ( C => typeof ReactDOM != 'undefined' ? ReactDOM : typeof ReactDom != 'undefined' ? ReactDom : C ? require('react-dom') : require('react-dom/server'))(isClient)\nconst findDOMNode = ( C => C ? reactDom.findDOMNode : function(){} )(isClient)\nconst render      = ( C => C ? reactDom.render : reactDom.renderToString)(isClient)\n\nif (!context.SAX) {\n  context.SAX = SAX\n}\n\nconst componentMonuted = SAX('ReactComponentMonuted')\nconst store = ( sax => {\n  try {\n    if (!sax) throw 'storehlc depend on SAX, SAX is fkp-sax, is a Global fun'\n    return (id, ComposedComponent, extension) => {\n      if (!id) throw 'storehlc id must be set'\n      return class extends ComposedComponent {\n        constructor(props) {\n          super(props)\n          this.globalName = id\n\n          // 初始化，组件没有渲染的状态\n          const unmounted = {}\n          unmounted[id] = false\n          componentMonuted.append(unmounted)\n\n          const queryer = sax(id)\n          queryer.data.originalState\n          ? queryer.data.originalState[id] = cloneDeep(this.state)\n          : ( ()=>{\n            let temp = {}; temp[id] = cloneDeep(this.state)\n            queryer.data.originalState = temp\n          })()\n          sax.bind(id, this)\n\n          if (typeof extension == 'object') {\n            if (typeof extension.plugins == 'object' && !Array.isArray(extension.plugins)) {\n              const plugins = extension.plugins\n              Object.keys(extension.plugins).map( item => {\n                if (typeof plugins[item] == 'function') {\n                  // plugins[item] = this::plugins[item]\n                  this[item] = plugins[item]\n                }\n              })\n            }\n          }\n        }\n      }\n    }\n  } catch (e) {\n    return ComposedComponent\n  }\n})(SAX)\n\nconst isFunction = function(target){\n  return typeof target == 'function'\n}\n\nconst didMount = function(ctx, opts, cb, queryer){\n  let that = findDOMNode(this)\n  if( typeof this.props.itemDefaultMethod == 'function' ){\n    this.props.itemDefaultMethod.call(ctx, that, this.intent)\n  }\n\n  if (\n    typeof cb == 'function' ||\n    typeof this.props.rendered == 'function' ||\n    typeof this.props.itemMethod == 'function'\n  ) {\n    const imd = isFunction(cb) ? cb : this.props.rendered || this.props.itemMethod\n    imd.call(ctx, that, this.intent)\n  }\n  queryer.roll('rendered')\n}\n\n\n/**\n * [dealWithReactElement 处理传入为react element 的场景，一般用于wrap]\n * @param  {react element} CComponent [description]\n * @return {react class}            [description]\n */\nfunction dealWithReactElement(CComponent, opts, cb, queryer){\n  return class extends React.Component {\n    constructor(props){\n      super(props)\n      this.intent = this.props.intent\n      this.state = { show: true }\n\n      this.show = this.show.bind(this)\n      this.hide = this.hide.bind(this)\n    }\n    componentWillMount() {\n      if (this.props.show == false) this.setState({ show: false })\n    }\n    show(){\n      this.setState({\n        show: true\n      })\n    }\n    hide(){\n      this.setState({\n        show: false\n      })\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount() {\n      let self = this\n      let that = findDOMNode(this);\n      const _ctx = {\n        show: this.show,\n        hide: this.hide\n      }\n\n      super.componentDidMount ? super.componentDidMount() : ''\n      didMount.call(this, _ctx, opts, cb, queryer)\n    }\n    render(){\n      return this.state.show ? CComponent : <span/>\n    }\n  }\n}\n\n/**\n * [combineX description]\n * @param  {react class | react element}   ComposedComponent [description]\n * @param  {object}   opts              [description]\n * @param  {Function} cb                [description]\n * @return {react class | object}       [description]\n */\n\nexport default function combineX(ComposedComponent, opts, cb){\n  if (!ComposedComponent) return\n\n  if ( typeof ComposedComponent == 'string' || Array.isArray(ComposedComponent) ) return\n\n  let extension = cb\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = undefined\n  }\n\n  const globalName = uniqueId('Combinex_')\n\n  let queryer = SAX(globalName)\n  if (opts) { queryer.append(opts) }\n\n  // will return React class for type 2\n  let returnReactClass = false\n  if (typeof opts == 'object' && opts.type == 'reactClass') {\n    returnReactClass = true\n    delete opts.type\n  }\n\n\n\n\n\n  /**\n   * type 1\n   * ComposedComponent 为 React element\n   * @param  {[type]} React [description]\n   * @return [type]         [description]\n   */\n  if (React.isValidElement(ComposedComponent)) {\n    return dealWithReactElement(ComposedComponent, opts, cb, queryer)\n  }\n\n\n\n\n\n\n  /**\n   * type 2\n   * ComposedComponent 为 React class\n   * @type {[type]}\n   */\n\n  function dispatcher(key, props, QueryCtx){\n    const ctx = queryer.store.ctx[globalName]\n\n    const liveState = cloneDeep(ctx.state)\n    const oState = queryer.data.originalState[globalName]\n    // const oState = JSON.parse(queryer.data.originalState[globalName])\n\n    const queryActions = queryer.data\n\n    // const _state = {\n    //   curState: liveState,\n    // }\n\n    queryActions.curState = liveState\n    QueryCtx.data = liveState.data\n\n    if (queryActions[key]) {\n      const _tmp = queryActions[key].call(queryActions, oState, props)\n      if (_tmp) {\n        // const target = merge({}, oState, _tmp)\n        ctx.setState(_tmp)\n      }\n    }\n  }\n\n  let ReactComponentMonuted = false\n  class Temp extends ComposedComponent {\n    constructor(props) {\n      super(props);\n\t\t\tthis.intent = this.props.intent || [];\n    }\n\n    componentWillUnmount(){\n      const gname = this.globalName\n      componentMonuted.data[gname] = false\n      // ReactComponentMonuted = false\n    }\n\n    componentDidUpdate(){\n      this.componentDidMount()\n    }\n\n    componentDidMount(){\n\t\t\tlet self = this\n\t\t\tlet that = findDOMNode(this);\n\n      const _ctx = {\n        // state: queryer.data.originalState[globalName],\n        dispatch: dispatcher,\n        refs: this.refs\n      }\n      super.componentDidMount ? super.componentDidMount() : ''\n      didMount.call(this, _ctx, opts, cb, queryer)\n\n      componentMonuted.data[this.globalName] = true\n\t\t}\n  }\n\n  class Query {\n    constructor(config){\n      this.config = config\n      this.element = store(globalName, Temp, extension)\n      this.timer\n      this.globalName = globalName\n      this.saxer = queryer\n      this.setActions = queryer.setActions\n      this.on = queryer.on\n      this.roll = queryer.roll\n      this.data\n\n      this.hasMounted = function(){\n        const gname = this.globalName\n        return componentMonuted.data[gname]\n      }\n\n      this.dispatch = function(key, props){\n        const that = this\n        clearTimeout(this.timer)\n        this.timer = setTimeout(function() {\n          const hasMounted = that.hasMounted()\n          if (hasMounted) dispatcher(key, props, that)\n        }, 0);\n      }\n    }\n  }\n\n  if (returnReactClass) {\n    return store(globalName, Temp, extension)\n  } else {\n    return new Query()\n  }\n}\n\nexport function wrap(ComposedComponent, opts, cb){\n  if (!opts) opts = {type: 'reactClass'}\n\n  if (typeof opts == 'function') {\n    cb = opts\n    opts = {\n      type: 'reactClass'\n    }\n  }\n\n  if (typeof opts == 'object') {\n    opts.type = 'reactClass'\n  }\n\n  return combineX(ComposedComponent, opts, cb)\n}\n\n\n// CombineClass\n\nfunction browserRender(id, X, config){\n  const props = config.props\n  if (typeof id == 'string') {\n    return render(<X {...props}/>, document.getElementById(id))\n  }\n\n  else if (typeof id == 'object' && id.nodeType) {\n    return render(<X {...props}/>, id)\n  }\n}\n\nfunction _rendered(ctx, cb){\n  return function(dom, intent){\n    ctx.elements = this.refs\n    ctx.data = ctx.combx.data ? ctx.combx.data : ctx.config.props.data  // 用于实例中做数据查询，该data同步于react class的state.data，dispatcher中动态更新该值\n    cb.call(this, dom, intent, ctx)\n  }\n}\n\nexport class CombineClass{\n  constructor(config){\n    this.config = config\n    this.isClient = isClient\n    this.extension = {}\n    this.elements   // rendered方法中赋值，react class的componentDidMount之后将refs的内容赋值给该变量\n    browserRender = this::browserRender\n\n    this.inject()\n  }\n\n  combinex(GridsBase, Actions={}){\n    const that = this\n    const CombX = combineX(GridsBase, Actions, this.extension)\n    this.combx = CombX\n    this.globalName = CombX.globalName\n    this.x = CombX.element\n    this.dispatch = CombX::CombX.dispatch\n    this.hasMounted = CombX::CombX.hasMounted\n\n\n    let keynames = Object.keys(Actions)\n    const lowKeyNames = keynames.map( item => item.toLowerCase() )\n    const upKeyNames = keynames\n\n    for (let ii=0; ii<lowKeyNames.length; ii++) {\n      const actName = upKeyNames[ii]\n      this['$'+lowKeyNames[ii]] = function(param){\n        this.dispatch(actName, param)\n        return this\n      }\n    }\n\n    // this.setActions = function(key, func){\n    //   const _actions = {}\n    //   _actions[key] = func\n    //   CombX.saxer.setActions(_actions)\n    //   return this\n    // }\n\n    this.on = (key, fun)=>{\n      CombX.saxer.on(key, fun)\n      return this\n    }\n\n    this.off = (key) => {\n      CombX.saxer.off(key)\n      return this\n    }\n\n    this.roll = function(key, data){\n      CombX.saxer.roll(key, data)\n      return this\n    }\n\n    this.emit = this.roll\n\n\n    this.appendActions = function(obj){\n      CombX.saxer.append(obj)\n      Object.keys(obj).map(function(item){\n        const lowCaseName = '$'+item.toLowerCase()\n        that[lowCaseName] = function(param){\n          that.dispatch(item, param)\n        }\n      })\n      return this\n    }\n  }\n\n  extend(exts){\n    if (typeof exts == 'object') {\n      Object.keys(exts).map( _name => {\n        this[_name] = exts[_name]\n      })\n    }\n  }\n\n  inject(src){\n    if (this.isClient) {\n      // const ij = inject()\n      // if (this.config.theme && this.config.autoinject) {\n      //   ij.css(['/css/m/'+this.config.theme])  //注入样式\n      // }\n      // if (typeof src == 'function') {\n      //   src(ij)\n      // }\n      // return ij\n    }\n    return this\n  }\n\n  setConfig(config){\n    this.config = config || {}\n    return this\n  }\n\n  setProps(props){\n    this.config.props = props\n    return this\n  }\n\n  reRender(){\n    this.render()\n  }\n\n  render(id, cb){\n    id = id || this.config.container\n    const X = this.x\n    let _props = this.props || this.config.props\n\n    if (typeof id == 'function' || typeof cb == 'function') {\n      this.config.rendered = typeof id == 'function' ? id : cb\n    }\n    if ( typeof this.config.rendered == 'function' || typeof this.rendered == 'function' ) {\n      const rended = (this.config.rendered || this.rendered )\n      if (_props) _props.rendered = _rendered(this, rended)\n      else {\n        _props = {\n          rendered: _rendered(this, rended)\n        }\n      }\n    }\n\n    this.config.props = _props || {}\n\n    if (typeof id == 'string' || typeof id == 'object') {\n      if (this.isClient) {\n        this.config.container = id\n        return browserRender(id, X, this.config)\n      }\n    }\n\n    _props = _props || {}\n    return <X {..._props}/>\n  }\n}\n"]}